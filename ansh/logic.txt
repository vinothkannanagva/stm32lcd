static void ST7789_WriteData(uint8_t *buff, size_t buff_size)
{
  ST7789_Select();
  ST7789_DC_Set();

  // split data in small chunks because HAL can't send more than 64K at once

  while (buff_size > 0) {
    uint16_t chunk_size = buff_size > 65535 ? 65535 : buff_size;
    #ifdef USE_DMA
    if(DMA_min_Sz<=buff_size){
      HAL_SPI_Transmit_DMA(&ST7789_SPI_PORT, buff, chunk_size);
//      while(ST7789_SPI_PORT.hdmatx->State!=HAL_DMA_STATE_READY){
//        asm("nop");                                              // Fix for current STM32F1 libraries, HAL_DMA_StateTypeDef is not being declared as volatile so optimizations will break this check
//      }
    }
    else{
      HAL_SPI_Transmit(&ST7789_SPI_PORT, buff, chunk_size, HAL_MAX_DELAY);
    }
    #else
    HAL_SPI_Transmit(&ST7789_SPI_PORT, buff, chunk_size, HAL_MAX_DELAY);
    #endif
    buff += chunk_size;
    buff_size -= chunk_size;
  }

  ST7789_UnSelect();
}